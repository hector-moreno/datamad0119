# Challenge 2 - Create the Database and Tables
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Customers` (
  `Customer ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Phone number` INT NULL,
  `Email` VARCHAR(45) NULL,
  `Address` VARCHAR(100) NULL,
  `City` VARCHAR(45) NULL,
  `State` VARCHAR(45) NULL,
  `Country` VARCHAR(45) NULL,
  `Postal Code` INT NULL,
  PRIMARY KEY (`Customer ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Salesperson`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Salesperson` (
  `Staff ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Store` VARCHAR(45) NULL,
  PRIMARY KEY (`Staff ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Invoice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Invoice` (
  `Invoice number` INT NOT NULL AUTO_INCREMENT,
  `Date` INT(11) NULL,
  `Cars_VIN` VARCHAR(45) NULL,
  `Customers_Customer ID` VARCHAR(100) NULL,
  `Salesperson_Staff ID` INT NOT NULL,
  `Customers_Customer ID1` INT NOT NULL,
  `Salesperson_Staff ID1` INT NOT NULL,
  PRIMARY KEY (`Invoice number`, `Salesperson_Staff ID`, `Customers_Customer ID1`, `Salesperson_Staff ID1`),
  INDEX `fk_Invoice_Customers1_idx` (`Customers_Customer ID1` ASC),
  INDEX `fk_Invoice_Salesperson1_idx` (`Salesperson_Staff ID1` ASC),
  CONSTRAINT `fk_Invoice_Customers1`
    FOREIGN KEY (`Customers_Customer ID1`)
    REFERENCES `mydb`.`Customers` (`Customer ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Invoice_Salesperson1`
    FOREIGN KEY (`Salesperson_Staff ID1`)
    REFERENCES `mydb`.`Salesperson` (`Staff ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Cars`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cars` (
  `VIN` INT NOT NULL AUTO_INCREMENT,
  `Manufacturer` VARCHAR(45) NULL,
  `Model` VARCHAR(45) NULL,
  `Year` VARCHAR(45) NULL,
  `Color` VARCHAR(45) NULL,
  `Customers_Customer ID` INT NOT NULL,
  `Salesperson_Staff ID` INT NOT NULL,
  `Invoice_Invoice number` INT NOT NULL,
  `Invoice_Salesperson_Staff ID` INT NOT NULL,
  PRIMARY KEY (`VIN`, `Customers_Customer ID`, `Salesperson_Staff ID`, `Invoice_Invoice number`, `Invoice_Salesperson_Staff ID`),
  INDEX `fk_Cars_Customers_idx` (`Customers_Customer ID` ASC),
  INDEX `fk_Cars_Salesperson1_idx` (`Salesperson_Staff ID` ASC),
  INDEX `fk_Cars_Invoice1_idx` (`Invoice_Invoice number` ASC, `Invoice_Salesperson_Staff ID` ASC),
  CONSTRAINT `fk_Cars_Customers`
    FOREIGN KEY (`Customers_Customer ID`)
    REFERENCES `mydb`.`Customers` (`Customer ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cars_Salesperson1`
    FOREIGN KEY (`Salesperson_Staff ID`)
    REFERENCES `mydb`.`Salesperson` (`Staff ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cars_Invoice1`
    FOREIGN KEY (`Invoice_Invoice number` , `Invoice_Salesperson_Staff ID`)
    REFERENCES `mydb`.`Invoice` (`Invoice number` , `Salesperson_Staff ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Sales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Sales` (
  `idSales` INT NOT NULL AUTO_INCREMENT,
  `Cars_VIN` VARCHAR(45) NULL,
  `Customers_Customer ID` VARCHAR(45) NULL,
  `Invoice_Invoice number` VARCHAR(45) NULL,
  `Salesperson_Staff ID` VARCHAR(45) NULL,
  PRIMARY KEY (`idSales`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Customers_has_Salesperson`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Customers_has_Salesperson` (
  `Customers_Customer ID` INT NOT NULL,
  `Salesperson_Staff ID` INT NOT NULL,
  PRIMARY KEY (`Customers_Customer ID`, `Salesperson_Staff ID`),
  INDEX `fk_Customers_has_Salesperson_Salesperson1_idx` (`Salesperson_Staff ID` ASC),
  INDEX `fk_Customers_has_Salesperson_Customers1_idx` (`Customers_Customer ID` ASC),
  CONSTRAINT `fk_Customers_has_Salesperson_Customers1`
    FOREIGN KEY (`Customers_Customer ID`)
    REFERENCES `mydb`.`Customers` (`Customer ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customers_has_Salesperson_Salesperson1`
    FOREIGN KEY (`Salesperson_Staff ID`)
    REFERENCES `mydb`.`Salesperson` (`Staff ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


# Challenge 3 - Seeding the Database

USE mydb;
 INSERT INTO Customers(`Customer ID`, `Name`, `Phone number`, `Email`, `Address`, `City`, `State`, `Country`, `Postal Code`)
 VALUES('1001', 'Pablo Picasso', 4636176382, '-', 'Paseo de la Chopera, 14', 'Madrid', 'Madrid', 'Spain', '28045');

INSERT INTO Salesperson(`Staff ID`, `Name`, `Store`)
VALUES('00001', 'Petey Cruiser', 'Madrid'), ('00002', 'Anna Sthesia', 'Barcelona'), ('00003', 'Paul Molive', 'Berl√≠n'),('00004', 'Gail Forcewind', 'Paris'),('00005', 'Paige Turner', 'Mimia'),('00006', 'Bob Frapples', 'Mexico City'),('00007', 'Water Melon', 'Amsterdam'),('00008', 'Shonda Leer', 'Sao Paulo');

